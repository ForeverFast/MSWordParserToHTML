<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ib="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:c="clr-namespace:MSWordParserToHTML.Converters"
                    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes">

    <c:WindowStateToWindowsStateConverter x:Key="wdtwd"/>

    <Style x:Key="PathButton" TargetType="{x:Type Button}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="ButtonBorder" Background="{TemplateBinding Background}" Height="28" Width="42">
                        <md:PackIcon Name="Icon" Kind="MoreHoriz"
                                                 Background="{x:Null}"
                                                 Width="32" Height="25"
                                                 Margin="-3,0,0,0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource StandartLightColor2}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource StandartLightColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--#region SystemButtons -->

    <Style x:Key="MinimizeButton" TargetType="{x:Type Button}">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="ButtonBorder" Background="{TemplateBinding Background}" Height="28" Width="42">
                        <md:PackIcon Name="Icon" Kind="HorizontalLine"
                                                 Background="{x:Null}"
                                                 Width="32" Height="25"
                                                 Margin="3,5,0,0"/>
                        <ib:Interaction.Triggers>
                            <ib:EventTrigger EventName="MouseLeftButtonDown">
                                <ib:ChangePropertyAction PropertyName="WindowState" Value="Minimized"
                           TargetObject="{Binding RelativeSource={RelativeSource
                                                  Mode=FindAncestor,
                                                  AncestorType=Window}}" />
                            </ib:EventTrigger>
                        </ib:Interaction.Triggers>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource StandartLightColor2}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource StandartLightColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="ResizeButton" TargetType="{x:Type Button}">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="ButtonBorder" Background="{TemplateBinding Background}" Height="28" Width="42">
                        <md:PackIcon Name="Icon" RenderTransformOrigin="0.5,0.5" Width="32" Height="25"
                                                 >
                            <md:PackIcon.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="-180"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </md:PackIcon.RenderTransform>
                        </md:PackIcon>

                        <ib:Interaction.Triggers>
                            <ib:EventTrigger EventName="MouseLeftButtonDown">
                                <ib:ChangePropertyAction PropertyName="WindowState" Value="{Binding RelativeSource={RelativeSource
                                                  Mode=FindAncestor,
                                                  AncestorType=Window}, Path=WindowState, Converter={StaticResource wdtwd}}"
                                                        TargetObject="{Binding RelativeSource={RelativeSource
                                                                              Mode=FindAncestor,
                                                                              AncestorType=Window}}" />
                            </ib:EventTrigger>
                        </ib:Interaction.Triggers>

                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                       AncestorType=Window}, Path=WindowState}"  Value="Normal">
                            <Setter TargetName="Icon" Property="Kind" Value="CropSquare"/>
                            <Setter TargetName="Icon" Property="Margin" Value="5,1,0,0"/>
                            <Setter TargetName="Icon" Property="Width" Value="25"/>
                            <Setter TargetName="Icon" Property="Height" Value="25"/>
                           
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                       AncestorType=Window}, Path=WindowState}"  Value="Maximized">
                            <Setter TargetName="Icon" Property="Kind" Value="ImageFilterNone"/>
                            <Setter TargetName="Icon" Property="Margin" Value="5,5,0,0"/>
                            <Setter TargetName="Icon" Property="Width" Value="17"/>
                            <Setter TargetName="Icon" Property="Height" Value="17"/>
                            
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource StandartLightColor2}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource StandartLightColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="CloseButton" TargetType="{x:Type Button}">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="ButtonBorder" Background="{TemplateBinding Background}" Height="28" Width="42">
                        <md:PackIcon Name="Icon" Kind="Close"
                                                 Background="{x:Null}"
                                                
                                                 Width="32" Height="25"
                                                 Margin="0,0,0,0"/>
                        <ib:Interaction.Triggers>
                            <ib:EventTrigger EventName="MouseLeftButtonDown">
                                <ib:CallMethodAction MethodName="Close"
                           TargetObject="{Binding RelativeSource={RelativeSource
                                                  Mode=FindAncestor,
                                                  AncestorType=Window}}" />
                            </ib:EventTrigger>
                        </ib:Interaction.Triggers>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource StandartLightColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--#endregion-->


</ResourceDictionary>